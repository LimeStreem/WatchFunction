//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34014
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Assets.Scripts.Functions.PrefabController;
using Functions.PrefabController;
using UnityEditor;
using UnityEngine;
using Random = UnityEngine.Random;


namespace AssemblyCSharp
{
		public class Discrete1Function:IFunction
		{

		private float A;

		private float B;

		private float C;

		    private bool IsNegative;

		public Discrete1Function ()
				{
				}
		#region implemented abstract members of IFunction

		    public override void Refresh()
		    {
				A = Random.Range(1, 9)*(Random.Range (0,1)*2-1);
                B = Random.Range(1, 4)*(Random.Range (0,1)*2-1);
				C = Random.Range(1, 4)*(Random.Range (0,1)*2-1);
				IsNegative = Random.Range (0,1) != 0 ? true : false;
		    }

		    public override void DrawGraph (float time)
		{

		}

		    public override void BeginDraw(GameManager gameManager)
		    {
		        var gameObject = FunctionPrefabContainer.instance.Discrete1GameObject;
                var controller = gameObject.GetComponent<ParaboraFunctionController>();
                controller.A = A;
                controller.C = C;
                controller.B = B;
		        controller.IsNegative = IsNegative;
		        gameManager.BasicGraphTarget.ChangeGameObject(gameObject);

		    }
            public override bool IsHit(Vector2 player)
            {
                return (Math.Floor(player.x*A) + Math.Ceiling(player.y*B) + C)%2 == 0;
            }

		public override string functionName {
			get {
				return "LinearFunction";
			}
		}

		public override int functionLevel {
			get {
				return 1;
			}
		}

		    public override float waitingTimeInSecound
		    {
		        get { return 3; }
		    }

		    public override void DrawFormula(GameManager gameManager)
		    {
		        gameManager.BasicFormulaTarget.text = string.Format("D={{(x,y);(Floor({0}x)+Ceil({1}y)+{2}))%2==0}}", A, B,C);

		        #endregion

		    }
		}
}

